"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const cry_1 = require("./cry");
const fastJsonStableStringify = require('fast-json-stable-stringify');
var Certificate;
(function (Certificate) {
    function safeToLowerCase(str) {
        return typeof str === 'string' ? str.toLowerCase() : str;
    }
    /**
     * deterministically encode cert into JSON
     * @param cert cert object
     */
    function encode(cert) {
        return fastJsonStableStringify(Object.assign({}, cert, { signer: safeToLowerCase(cert.signer), signature: cert.signature ? safeToLowerCase(cert.signature) : cert.signature }));
    }
    Certificate.encode = encode;
    /**
     * verify the cert
     * @param cert cert object with signature
     */
    function verify(cert) {
        if (!cert.signature) {
            throw new Error('signature missing');
        }
        const signature = cert.signature;
        if (!/^0x[0-9a-f]+$/i.test(signature) || signature.length % 2 !== 0) {
            throw new Error('invalid signature');
        }
        const encoded = encode(Object.assign({}, cert, { signature: undefined }));
        const signingHash = cry_1.blake2b256(encoded);
        const pubKey = cry_1.secp256k1.recover(signingHash, Buffer.from(signature.slice(2), 'hex'));
        if ('0x' + cry_1.publicKeyToAddress(pubKey).toString('hex') !== safeToLowerCase(cert.signer)) {
            throw new Error('signature does not match with signer');
        }
    }
    Certificate.verify = verify;
})(Certificate = exports.Certificate || (exports.Certificate = {}));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2VydGlmaWNhdGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvY2VydGlmaWNhdGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSwrQkFBaUU7QUFDakUsTUFBTSx1QkFBdUIsR0FBRyxPQUFPLENBQUMsNEJBQTRCLENBQUMsQ0FBQTtBQW1CckUsSUFBaUIsV0FBVyxDQXNDM0I7QUF0Q0QsV0FBaUIsV0FBVztJQUN4Qix5QkFBeUIsR0FBVztRQUNoQyxPQUFPLE9BQU8sR0FBRyxLQUFLLFFBQVEsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLFdBQVcsRUFBRSxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUE7SUFDNUQsQ0FBQztJQUNEOzs7T0FHRztJQUNILGdCQUF1QixJQUFpQjtRQUNwQyxPQUFPLHVCQUF1QixtQkFDdkIsSUFBSSxJQUNQLE1BQU0sRUFBRSxlQUFlLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxFQUNwQyxTQUFTLEVBQUUsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsZUFBZSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLFNBQVMsSUFDcEUsQ0FBQTtJQUNoQixDQUFDO0lBTmUsa0JBQU0sU0FNckIsQ0FBQTtJQUVEOzs7T0FHRztJQUNILGdCQUF1QixJQUFpQjtRQUNwQyxJQUFJLENBQUMsSUFBSSxDQUFDLFNBQVMsRUFBRTtZQUNqQixNQUFNLElBQUksS0FBSyxDQUFDLG1CQUFtQixDQUFDLENBQUE7U0FDdkM7UUFDRCxNQUFNLFNBQVMsR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFBO1FBQ2hDLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksU0FBUyxDQUFDLE1BQU0sR0FBRyxDQUFDLEtBQUssQ0FBQyxFQUFFO1lBQ2pFLE1BQU0sSUFBSSxLQUFLLENBQUMsbUJBQW1CLENBQUMsQ0FBQTtTQUN2QztRQUVELE1BQU0sT0FBTyxHQUFHLE1BQU0sbUJBQU0sSUFBSSxJQUFFLFNBQVMsRUFBRSxTQUFTLElBQUcsQ0FBQTtRQUN6RCxNQUFNLFdBQVcsR0FBRyxnQkFBVSxDQUFDLE9BQU8sQ0FBQyxDQUFBO1FBRXZDLE1BQU0sTUFBTSxHQUFHLGVBQVMsQ0FBQyxPQUFPLENBQUMsV0FBVyxFQUFFLE1BQU0sQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsRUFBRSxLQUFLLENBQUMsQ0FBQyxDQUFBO1FBRXJGLElBQUksSUFBSSxHQUFHLHdCQUFrQixDQUFDLE1BQU0sQ0FBQyxDQUFDLFFBQVEsQ0FBQyxLQUFLLENBQUMsS0FBSyxlQUFlLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxFQUFFO1lBQ3BGLE1BQU0sSUFBSSxLQUFLLENBQUMsc0NBQXNDLENBQUMsQ0FBQTtTQUMxRDtJQUNMLENBQUM7SUFqQmUsa0JBQU0sU0FpQnJCLENBQUE7QUFDTCxDQUFDLEVBdENnQixXQUFXLEdBQVgsbUJBQVcsS0FBWCxtQkFBVyxRQXNDM0IifQ==